{"version":3,"file":"ts-async-queue.iife.js","sources":["../src/queueError.ts","../src/taskQueue.ts"],"sourcesContent":["/**\n * An error raised during the queue execution\n */\nexport class QueueError<T> extends Error {\n  constructor(\n    message: string,\n    public data?: T\n  ) {\n    super(message)/* istanbul ignore next: because stupid typescript */;\n    Object.setPrototypeOf(this, QueueError.prototype);\n    this.name = 'ResponseException';\n  }\n\n  toString() {\n    return this.name + ': ' + this.message;\n  }\n}\n","import { QueueError } from './queueError';\n\n/**\n * A function that returns promise and has no arguments\n */\nexport type Task = () => Promise<any>;\n\n/**\n * Manages a queue of async tasks\n *\n * @class TaskQueue\n */\nexport class TaskQueue {\n  /**\n   * Creates an instance of TaskQueue.\n   * @param {Task[]} [tasks=[]] Tasklist\n   */\n  constructor(\n    /**\n     * Tasklist\n     */\n    private tasks: Task[] = []\n  ) {}\n  /**\n   * A currently running queue\n   */\n  private currentQueue?: Promise<any[]>;\n\n\n  /**\n   * `true` if the queue is running\n   */\n  private running: boolean = false;\n\n  /**\n   * An index at which the queue was paused\n   */\n  private pauseIndex: number = -1;\n\n  /**\n   * Remove a task from queue by its index\n   *\n   * @returns a removed task if found\n   */\n  private dequeueByIndex(index: number) {\n    if (index === this.length - 1) {\n      return this.tasks.pop();\n    }\n\n    if (index > -1 && this.tasks[index]) {\n      const task = this.tasks[index];\n      this.tasks.splice(index, 1);\n\n      return task;\n    }\n\n    return undefined;\n  }\n\n  /**\n   * Remove a task from queue by its reference. If no task was given, removes the last task.\n   * @param {T} [task] a reference to the task function to remove by\n   * @returns a removed task if found\n   */\n  private dequeueByTask<T extends Task>(task?: T) {\n    if (!task) {\n      return this.tasks.pop();\n    }\n\n    const index = this.tasks.findIndex(t => t === task);\n\n    return this.dequeueByIndex(index);\n  }\n\n  /**\n   * Start executing the queue from a certain point.\n   * Halts if `running` flag is off (pause has occured).\n   *\n   * If any error in any task is raised - pauses queue execution and throws the error upstack.\n   *\n   * @param {number} from a point to execute a queue from\n   * @returns a promise that resolves to task results array when the queue is finished\n   */\n  private async launchFrom(from: number) {\n    const results: any[] = [];\n    const entries = this.tasks.slice(from).entries();\n\n    for (const [index, task] of entries) {\n      if (!this.running) {\n        this.pauseIndex = index;\n        break;\n      }\n\n      try {\n        results.push(await task());\n      } catch (e) {\n        this.pause();\n        throw new QueueError(`Queue paused at task #${index} due to error in handler ${task}`, e);\n      }\n    }\n\n    return results;\n  }\n\n  /**\n   * Adds one or more tasks to queue.\n   */\n  public enqueue<T extends Task>(...tasks: T[]) {\n    this.tasks.push.apply(this.tasks, tasks);\n  }\n\n\n  /**\n   * Removes task from the queue.\n   * @returns a removed task if found\n   */\n  public dequeue<T extends Task>(task?: T): Task | undefined;\n  public dequeue(index: number): Task | undefined;\n  public dequeue(): Task | undefined {\n    const arg = arguments[0];\n\n    if (typeof arg === 'number') {\n      return this.dequeueByIndex(arg);\n    } else if (typeof arg === 'function') {\n      return this.dequeueByTask(arg);\n    }\n\n    throw new TypeError('Argument must either be a number or a function!');\n  }\n\n  /**\n   * Get last added task without mutating the queue\n   */\n  public peek() {\n    return this.tasks.length > 0 ? this.tasks[this.tasks.length - 1] : undefined;\n  }\n\n\n  /**\n   * Last added task\n   */\n  public get last() {\n    return this.peek();\n  }\n\n  /**\n   * Queue length\n   */\n  public get length() {\n    return this.tasks.length;\n  }\n\n  /**\n   * Completely clears the queue.\n   */\n  public clear() {\n    this.tasks.splice(0);\n  }\n\n  /**\n   * Pauses the queue's execution flow after a nearest task is completed.\n   *\n   * @returns a promise that resolves as soon as the queue is paused\n   */\n  public pause() {\n    this.running = false;\n\n    return this.currentQueue;\n  }\n\n  /**\n   * Resumes a previously paused queue.\n   *\n   * @returns a promise that resolves as soon as the queue is completed\n   */\n  public resume() {\n    return this.currentQueue = this.launchFrom(this.pauseIndex);\n  }\n\n  /**\n   * Stops queue execution.\n   *\n   * @returns a promise that resolves as soon as the queue completely stops executing\n   */\n  public async stop() {\n    await this.pause();\n    this.pauseIndex = -1;\n    this.currentQueue = undefined;\n\n    return;\n  }\n\n  /**\n   * Starts task queue execution.\n   *\n   * Returns currenlty executed queue if execution already started\n   *\n   * @returns promise with task results as an array sorted by task execution order\n   */\n  public start() {\n    if (this.currentQueue) {\n      return this.currentQueue;\n    }\n\n    return this.currentQueue = this.launchFrom(0);\n  }\n}\n"],"names":["tslib_1.__extends","tslib_1.__values","tslib_1.__read"],"mappings":"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"}